<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" default-autowire="byName">

<!--自动扫描-->
<context:component-scan base-package="com.archie" />
<!--增加spring部分的aop控制-->
<!--<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
--><!--启动spring注解,当自动扫描启动后,该配置可以去掉<context:annotation-config /> -->
<!--启动spring注解,等同于context:annotation-config 
<bean  
class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/> 
<bean  
class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
<bean  
class="org.springframework.beans.factory.annotation.PersistenceAnnotationBeanPostProcessor"/> 
<bean  
class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/> -->
	<!-- 处理文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="gbk" /> <!-- 默认编码 (ISO-8859-1) -->
		<property name="maxInMemorySize" value="10240" /> <!-- 最大内存大小 (10240)-->
		<property name="uploadTempDir" value="/" /> <!-- 上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) -->
		<property name="maxUploadSize" value="-1" /> <!-- 最大文件大小，-1为无限止(-1) -->
	</bean>

<!--配置数据源属性文件-->
<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name="locations">
    <list>
      <value>/WEB-INF/jdbc.properties</value>
    </list>
  </property>
</bean>
<!--配置数据源-->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
  <property name="driverClassName" value="${driver}" />
  <property name="url" value="${url}" />
  <property name="username" value="${username}" />
  <property name="password" value="${password}" />
</bean>
<!--配置SqlMapClient对象-->
<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
  <property name="configLocation" value="/WEB-INF/sqlMapConfig.xml" />
  <property name="dataSource" ref="dataSource" />
</bean>
<!--根据sqlMapClien创建一个SqlMapClient模版类-->
<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
  <property name="sqlMapClient" ref="sqlMapClient" />
</bean>
<!--配置事务管理器-->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSource" />
</bean>
<!--启动spring事务注解，事务注解尽在此-->
<tx:annotation-driven transaction-manager="transactionManager" />
<!--配置事务特性-->
<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
<tx:attributes>  
<tx:method name="select*" read-only="true" propagation="REQUIRED"/>  
<tx:method name="find*" read-only="true" propagation="REQUIRED"/>  
<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
<tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
<tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
<tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ"/>  
<tx:method name="*" read-only="true"/> 
</tx:attributes> </tx:advice> 
<!-- 配置哪些类的方法需要进行事务管理 -->
<aop:config proxy-target-class="true">  
<aop:pointcut id="baseServiceMethods" expression="execution(* com.archie.dao.*.*(..))"/>  
<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods"/> 
</aop:config>  
<aop:aspectj-autoproxy />
<!--配置事务代理拦截器
<bean id="baseTransactionProxy" abstract="true"  class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> 
<property name="transactionManager"> 
<ref bean="transactionManager"/> 
</property> 
<property name="transactionAttributes"> 
<props> 
<prop key="insert*">PROPAGATION_REQUIRED</prop> 
<prop key="update*">PROPAGATION_REQUIRED</prop> 
<prop key="delete*">PROPAGATION_REQUIRED</prop> 
<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>     
</props>    
</property> 
</bean> -->

<!--配置Dao实例
<bean id="userDao" class="com.archie.dao.UserDao">  
<property name="sqlMapClient" ref="sqlMapClient"/>    
</bean> -->
<!--配置Service实例
<bean id="userService" class="com.archie.service.UserService"> 
<property name="userDao" ref="userDao"/> 
</bean> -->
<!--添加了事务的管理类
<bean id="userManager" parent="baseTransactionProxy">    
<property name="target">     
<bean class="com.archie.service.UserService"/> 
</property>   
</bean> -->
</beans>